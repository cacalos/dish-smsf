apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.service.name }}
    {{- toYaml .Values.global.commonLabels | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: v1
        {{- toYaml .Values.global.commonLabels | nindent 8 }}
    spec:
      {{- if .Values.global.nodeName }}
      nodeName: {{ .Values.global.nodeName }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
      containers:
      - name: nginx
        image: {{ .Values.deployment.containers.emgui.image }}
        imagePullPolicy: {{ .Values.deployment.containers.emgui.imagePullPolicy }}
        {{- if .Values.deployment.containers.emgui.resources }}
        resources: {{ toYaml .Values.deployment.containers.emgui.resources | nindent 12 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.ports.nginx.targetPort }}
        env:
        - name: USMSF_EMGUI_DB_URL
          {{- if (eq .Values.global.cloudPlatform "AWS") }}
          value: "{{ .Values.global.aws.dbEndPoint }}"
          {{- else }}
          value: "{{ .Values.global.serviceName.mariadb }}.{{ .Release.Namespace }}.svc.{{ .Values.global.dnsName.zone }}"
          {{- end }}
        - name: USMSF_EMGUI_DB_USERNAME
          value: {{ .Values.deployment.env.emguiDB.username | quote }}
        - name: USMSF_EMGUI_DB_PASSWORD
          value: {{ .Values.deployment.env.emguiDB.password | quote }}
        - name: USMSF_EMGUI_DB_DATABASE
          value: {{ .Values.deployment.env.emguiDB.dbname | quote }}
        - name: USMSF_EMGUI_DB_PORT
          value: "{{ .Values.global.port.db.mariadb }}"
        - name: USMSF_EMGUI_CONFMGR_OPENAPI_URL
          value: "{{ .Values.global.serviceName.uccms }}.{{ .Release.Namespace }}.svc.{{ .Values.global.dnsName.zone }}:{{ .Values.global.port.uccms.servicePort }}/app/v1/"
        volumeMounts:
        - name: {{ .Values.configmap.volumeName }}
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: {{ .Values.configmap.volumeName }}
        configMap:
          name: {{ .Values.configmap.name }}
          items:
          - key: nginx.conf
            path: nginx.conf
